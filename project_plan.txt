cross over project - original estimate - 30 hours
spent: 13.25 hrs
mar24: 10:30 pm - 12:45 pm - 2.25 hrs
mar25: 10:30 am - 11:00 am - 0.50 hrs
     : 11:30 am - 01:00 pm - 1.50 hrs
     : 01:50 pm - 04:50 pm - 3.00 hrs
     : 11:00 pm - 12:45 am - 1.75 hrs
mar26: 04:40 pm - 06:10 pm - 1.50 hrs (waste - spent in pdf)
     : 06:30 pm - 07:30 pm - 1.00 hrs
     : 08:15 pm - 09:45 pm - 1.50 hrs
     : 10:10 pm - 10:25 pm - 0.25 hrs

todo:
steps breakup - done
read requirements - done
use cases - done
high level design - done
research js client - done
model/db design - done

rails new project - done
git initialize - done
integrate mysql - done
database.yml - done
favicon - done
coding - rb:models - done
coding - rb:seeds:basic - done
integrate bootstrap - done
coding - rb:routes:basic- done
coding - rb:controllers:basic - done
integrate devise:basic - done
sign in and signout page - done
coding: rb:seed:supportlog/supportrequest - done
html security design - done

finish user flow - done :::
controller: create new controller - done
ui: fix drop downs for product selection - done
ui: show page shows all the support logs for support request - done
accept nested attributes (different way) - done
- Sign up - done
- Sign in - done
- List of Support Requests (list) - done
- Create Support Request (create) (create support log) - done
- Provide Additional information (update) (only create support log) - done
- Status of each request (show) - done
- No Delete - done

coding rb:seed:more customers, more agents - done
finish agent flow - ongoing :::
- Sign in - done
- No Sign up - done
- List of Support Requests (list) - done
- Status of each request (show) - done
- Process to each request (update) (create support log, change status) - done
- No Delete - done
- No Create - done

fix application.html.erb for customer/agent/admin menu - done
finish admin flow :::
- Products on Support Request: List, Show, Update, Delete, Create - done
- Support Requests: List, Show, Update, Delete, Create - done

devise views: prevent self user deletion - done
- Agent Report Generation (list of all tickets closed last month) - done

api: routes/controllers design - done

api: field translation - done
api: customer agent translation helper - done

api: products - index - done
api: request_states - index - done
api: support request should include support logs - done

rampup react - ongoing
integrate react - ongoing

api: customers: support requests
- index - done
- show - done
- create
- update

api: agents: support requests
- index - done
- show - done
- update

api: admin : support requests
- index - done
- show - done
- update
- delete

api: admin : products
- index - done
- show - done
- show
- update
- delete


api: users (agent/customer/admin) -
- index
- show
- create
- update
- delete

html: Users: List, Show, Create, Update, Delete -

api: security design, token -

js:view design
coding - js:views:user - request: list, create, show/update
coding - js:views:agent - request: list (filters: status, created_at, updated_at), show/udpate, pdf generate
coding - js:views:admin - products crud, requests crud, users crud

test code - rb:rspec (models + controllers)
test code - js:jasmine



perf: use include in all blocks :: default_scope { includes(:author).order('created_at ASC') }

integrate PDF creator - later
add pdf support to report - later


create comments throughout the code
security evaluation
error handling
beautification/css fixes
end to end testing

create readme with info in the pdf
create uml diagram for the project
create design document with info in the pdf (embed uml screenshots)
create sql data file dump of seed data required
create video file with demo of all the screens
package the product as per specifications (readme, design, demo video, sql, code)

later: add pagination to all user/admin/agent index pages
later: integrate mailer
optional: integrate cancan - ongoing
optional: cucumber testing
